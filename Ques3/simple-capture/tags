!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CC	Makefile	/^CC=gcc$/;"	m
CDEFS	Makefile	/^CDEFS=$/;"	m
CFILES	Makefile	/^CFILES= capture.c$/;"	m
CFLAGS	Makefile	/^CFLAGS= -O0 -g $(INCLUDE_DIRS) $(CDEFS)$/;"	m
CLEAR	capture.c	36;"	d	file:
COLOR_CONVERT	capture.c	37;"	d	file:
HFILES	Makefile	/^HFILES= $/;"	m
HRES	capture.c	38;"	d	file:
HRES_STR	capture.c	40;"	d	file:
INCLUDE_DIRS	Makefile	/^INCLUDE_DIRS = $/;"	m
IO_METHOD_MMAP	capture.c	/^        IO_METHOD_MMAP,$/;"	e	enum:io_method	file:
IO_METHOD_READ	capture.c	/^        IO_METHOD_READ,$/;"	e	enum:io_method	file:
IO_METHOD_USERPTR	capture.c	/^        IO_METHOD_USERPTR,$/;"	e	enum:io_method	file:
LIBS	Makefile	/^LIBS= -lrt$/;"	m
LIB_DIRS	Makefile	/^LIB_DIRS = $/;"	m
OBJS	Makefile	/^OBJS= ${CFILES:.c=.o}$/;"	m
SRCS	Makefile	/^SRCS= ${HFILES} ${CFILES}$/;"	m
VRES	capture.c	39;"	d	file:
VRES_STR	capture.c	41;"	d	file:
bigbuffer	capture.c	/^unsigned char bigbuffer[(1280*960)];$/;"	v
buffer	capture.c	/^struct buffer $/;"	s	file:
buffers	capture.c	/^struct buffer          *buffers;$/;"	v	typeref:struct:buffer
close_device	capture.c	/^static void close_device(void)$/;"	f	file:
dev_name	capture.c	/^static char            *dev_name;$/;"	v	file:
dump_pgm	capture.c	/^static void dump_pgm(const void *p, int size, unsigned int tag, struct timespec *time)$/;"	f	file:
dump_ppm	capture.c	/^static void dump_ppm(const void *p, int size, unsigned int tag, struct timespec *time)$/;"	f	file:
errno_exit	capture.c	/^static void errno_exit(const char *s)$/;"	f	file:
fd	capture.c	/^static int              fd = -1;$/;"	v	file:
fmt	capture.c	/^static struct v4l2_format fmt;$/;"	v	typeref:struct:v4l2_format	file:
force_format	capture.c	/^static int              force_format=1;$/;"	v	file:
frame_count	capture.c	/^static int              frame_count = 30;$/;"	v	file:
framecnt	capture.c	/^unsigned int framecnt=0;$/;"	v
init_device	capture.c	/^static void init_device(void)$/;"	f	file:
init_mmap	capture.c	/^static void init_mmap(void)$/;"	f	file:
init_read	capture.c	/^static void init_read(unsigned int buffer_size)$/;"	f	file:
init_userp	capture.c	/^static void init_userp(unsigned int buffer_size)$/;"	f	file:
io	capture.c	/^static enum io_method   io = IO_METHOD_MMAP;$/;"	v	typeref:enum:io_method	file:
io_method	capture.c	/^enum io_method $/;"	g	file:
length	capture.c	/^        size_t  length;$/;"	m	struct:buffer	file:
long_options	capture.c	/^long_options[] = {$/;"	v	typeref:struct:option	file:
main	capture.c	/^int main(int argc, char **argv)$/;"	f
mainloop	capture.c	/^static void mainloop(void)$/;"	f	file:
n_buffers	capture.c	/^static unsigned int     n_buffers;$/;"	v	file:
open_device	capture.c	/^static void open_device(void)$/;"	f	file:
out_buf	capture.c	/^static int              out_buf;$/;"	v	file:
pgm_dumpname	capture.c	/^char pgm_dumpname[]="test00000000.pgm";$/;"	v
pgm_header	capture.c	/^char pgm_header[]="P5\\n#9999999999 sec 9999999999 msec \\n"HRES_STR" "VRES_STR"\\n255\\n";$/;"	v
ppm_dumpname	capture.c	/^char ppm_dumpname[]="test00000000.ppm";$/;"	v
ppm_header	capture.c	/^char ppm_header[]="P6\\n#9999999999 sec 9999999999 msec \\n"HRES_STR" "VRES_STR"\\n255\\n";$/;"	v
process_image	capture.c	/^static void process_image(const void *p, int size)$/;"	f	file:
read_frame	capture.c	/^static int read_frame(void)$/;"	f	file:
short_options	capture.c	/^static const char short_options[] = "d:hmruofc:";$/;"	v	file:
start	capture.c	/^        void   *start;$/;"	m	struct:buffer	file:
start_capturing	capture.c	/^static void start_capturing(void)$/;"	f	file:
stop_capturing	capture.c	/^static void stop_capturing(void)$/;"	f	file:
uninit_device	capture.c	/^static void uninit_device(void)$/;"	f	file:
usage	capture.c	/^static void usage(FILE *fp, int argc, char **argv)$/;"	f	file:
xioctl	capture.c	/^static int xioctl(int fh, int request, void *arg)$/;"	f	file:
yuv2rgb	capture.c	/^void yuv2rgb(int y, int u, int v, unsigned char *r, unsigned char *g, unsigned char *b)$/;"	f
yuv2rgb_float	capture.c	/^void yuv2rgb_float(float y, float u, float v, $/;"	f
